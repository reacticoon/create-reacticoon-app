function webpackPluginsConfigurator(config, env, options) {
  //
  // add our webpack plugins
  //

  // TODO: concat with Reacticoon user plugins config
  const CircularDependencyPlugin = env.reacticoonPaths.requireReacticoon(
    "circular-dependency-plugin"
  );
  const webpackPlugins = [
    //
    // Webpack - CircularDependancy plugin
    // https://github.com/aackerman/circular-dependency-plugin
    //
    new CircularDependencyPlugin({
      exclude: /node_modules/,
      // allow import cycles that include an asyncronous import,
      // e.g. via import(/* webpackMode: "weak" */ './file.js')
      allowAsyncCycles: true,
      // set to true to add errors to webpack instead of warnings
      failOnError: false,
      // `onDetected` is called for each module that is cyclical
      onDetected(props = {}) {
        if (!props) {
          return;
        }
        const { module: webpackModuleRecord, paths, compilation } = props;
        let errorMsg = "Circular dependency detected:\n";

        paths.forEach(path => {
          errorMsg += "-> " + path + "\n";
        });

        // `paths` will be an Array of the relative module paths that make up the cycle
        // `module` will be the module record generated by webpack that caused the cycle
        compilation.warnings.push(new Error(errorMsg));
      }
    })
  ];

  // TODO:
  // config.plugins = config.plugins.concat(webpackPlugins);
}

module.exports = webpackPluginsConfigurator;
